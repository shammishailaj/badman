package source

import (
	"bufio"
	"strings"
	"time"

	"github.com/m-mizutani/badman"
)

// MalwareDomains downloads blacklist from http://www.malwaredomains.com/
type MalwareDomains struct {
	URL string
}

// NewMalwareDomains is constructor of MalwareDomains
func NewMalwareDomains() *MalwareDomains {
	return &MalwareDomains{
		URL: "http://mirror1.malwaredomains.com/files/domains.txt",
	}
}

// Download of MalwareDomains downloads domains.txt and parses to extract domain names.
func (x *MalwareDomains) Download() chan *badman.EntityQueue {
	ch := make(chan *badman.EntityQueue, defaultSourceChanSize)

	go func() {
		defer close(ch)

		now := time.Now()
		body := getHTTPBody(x.URL, ch)
		if body == nil {
			return
		}

		scanner := bufio.NewScanner(body)
		for scanner.Scan() {
			line := scanner.Text()
			if strings.HasPrefix(line, "#") {
				continue // Comment line
			}

			row := strings.Split(line, "\t")
			ch <- &badman.EntityQueue{
				Entities: []*badman.BadEntity{
					{
						Name:    row[2],
						SavedAt: now,
						Src:     "MalwareDomains",
						Reason:  row[3],
					},
				},
			}
		}
	}()

	return ch
}
